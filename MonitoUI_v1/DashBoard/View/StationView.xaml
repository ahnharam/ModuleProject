<UserControl x:Name="userControl" x:Class="DashBoard.View.StationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:DashBoard.View"         
             xmlns:tree="clr-namespace:Protocol.Model.Common;assembly=Protocol"    
             xmlns:converter="clr-namespace:DashBoard.Converter"
             xmlns:prism="http://www.codeplex.com/prism" d:DataContext="{d:DesignInstance Type=local:StationViewModel}"
             prism:ViewModelLocator.AutoWireViewModel="True"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="250">
    <UserControl.Resources>
        <converter:TreeViewLineLengthConverter x:Key="TreeViewLineLengthConverter"/>

        <Style x:Key="StationTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="1,0,0,0"/>
            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
            <Setter Property="FontSize" Value="12"/>
            <EventSetter Event="Expanded" Handler="TreeViewItem_Expanded"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid Margin="0,0,0,5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition MinHeight="21"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="ChildName" BorderBrush="#FF9E9E9E" BorderThickness="1,1,1,1" Height="2" Margin="-10,12,0,12" Width="10.5" HorizontalAlignment="Left"/>
                            <ToggleButton x:Name="Expander" ClickMode="Press" HorizontalAlignment="Center" Height="21" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ExpandCollapseToggleStyle}" VerticalAlignment="Center"/>
                            <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Height="21" Margin="5,0,0,0" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                            </Border>
                            <Line x:Name="ItemsLine" Grid.Column="0" Grid.Row="1" X1="10" X2="10" Y1="0" Y2="{Binding ElementName=ItemsHost, Path=ActualHeight, Converter={StaticResource TreeViewLineLengthConverter}}" Stroke="#FF9E9E9E" StrokeThickness="2"/>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsFirst}" Value="true">
                                <Setter TargetName="ChildName" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="ItemsLine" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="ItemsLine" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#00000000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="#00000000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#00000000"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
                    <Setter Property="ItemsPanel">
                        <Setter.Value>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Rectangle Grid.Column="0" Grid.ColumnSpan="2" Fill="#FF28282C"/>

        <TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:StationView}}}" Padding="10,7" Foreground="White" FontSize="18" />

        
        <!--<ComboBox Name="StationSelectComboBox" Grid.Column="0" Grid.Row="0" IsEditable="false" Margin="5,5,5,5" ItemsSource="{Binding StationList}" SelectedItem="{Binding SelectStationOnComboBox}" FontFamily="Noto Sans KR" FontSize="15"  >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding StationSelectedButtonCommand}"
                                   CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Name}"/>
                    </StackPanel>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.Style>
                <Style TargetType="ComboBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>-->
        
        <Button Grid.Column="1" Grid.Row="0" Margin="0,5,5,5" Command="{Binding SearchStationButtonCommand}" CommandParameter="{Binding}">
            <Button.Style>
                <Style TargetType="Button">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="true">
                            <Setter Property="Content" Value="취소"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="false">
                            <Setter Property="Content" Value="검색"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TreeView Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" x:Name="StationTreeView" Margin="10" Background="{x:Null}" BorderBrush="{x:Null}" MinHeight="80"  Foreground="White" ItemsSource="{Binding StationGroupTree}" Style="{StaticResource CommonTreeViewStyle}" ItemContainerStyle="{StaticResource StationTreeViewItemStyle}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedItemChanged">
                    <i:InvokeCommandAction Command="{Binding StationTreeViewItemSelectedButtonCommand}"
                                   CommandParameter="{Binding ElementName=StationTreeView, Path=SelectedItem}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseLeftButtonUp">
                    <i:InvokeCommandAction Command="{Binding StationTreeViewItemSelectedButtonCommand}"
                                   CommandParameter="{Binding ElementName=StationTreeView, Path=SelectedItem}"/>
                </i:EventTrigger>
                <i:EventTrigger EventName="MouseDoubleClick">
                    <i:InvokeCommandAction Command="{Binding StationDoubleClickButtonCommand}"
                                   CommandParameter="{Binding ElementName=StationTreeView, Path=SelectedItem}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <!--<TreeView Grid.Row="1" Margin="10" Background="{x:Null}" BorderBrush="{x:Null}" MinHeight="250" Foreground="White" ItemsSource="{Binding StationTree}" Style="{StaticResource CommonTreeViewStyle}" ItemContainerStyle="{StaticResource StationTreeViewItemStyle}" SelectedItemChanged="{Binding StationTreeViewItemSelectedButtonCommand}">-->
            <TreeView.Resources>
                <HierarchicalDataTemplate DataType="{x:Type tree:GroupTreeItem}" ItemsSource="{Binding Items}">
                    <TextBlock Text="{Binding Name}" Cursor="Hand"/>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>

        <!--<ComboBox x:Name="SearchStationComboBox" Grid.Column="0" Grid.Row="0" IsTextSearchEnabled="False"
          IsEditable="True"
          IsDropDownOpen="True"
          StaysOpenOnEdit="True" Margin="5" ItemsSource="{Binding StationListToString}" SelectedItem="{Binding SelectStationOnComboBox}" KeyUp="ComboBox_KeyUp" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding StationSelectedComBoBoxCommand}"
                                   CommandParameter="{Binding}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ComboBox.Style>
                <Style TargetType="ItemsControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationSearchYn}" Value="true" />
                                <Condition Binding="{Binding Text, ElementName=StationSearchTextBox}" Value="" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>

                    </Style.Triggers>
                </Style>
            </ComboBox.Style>
        </ComboBox>-->

        <TextBox x:Name="StationSearchTextBox" Grid.Column="0" Grid.Row="0" Text="" Margin="5" GotFocus="StationSearchTextBox_GotFocus" KeyUp="StationSearchTextBox_KeyUp" TextChanged="StationSearchTextBox_TextChanged" VerticalAlignment="Center">
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
        </TextBox>

        <ItemsControl x:Name="StationList" Grid.Column="0" Grid.Row="1"  Margin="5,0,5,5" ItemsSource="{Binding StationListToString}" Background="White" Padding="5,5,5,5">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding}" Click="Button_Click" Command="{Binding DataContext.StationSelectedComBoBoxCommand2, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.Style>
                <Style TargetType="ItemsControl">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="true">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StationSearchYn}" Value="false">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <!--<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding StationSearchYn}" Value="true" />
                                <Condition Binding="{Binding IsFocused , ElementName=StationSearchTextBox}" Value="false" />
                                <Condition Binding="{Binding IsFocused , ElementName=StationList}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Transparent"/>
                        </MultiDataTrigger>-->
                    </Style.Triggers>
                </Style>
            </ItemsControl.Style>
        </ItemsControl>
    </Grid>
</UserControl>
